{"ast":null,"code":"var _jsxFileName = \"/home/hang/Documents/ML-full-stack-app/front-end/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { FilesetResolver, HandLandmarker, PoseLandmarker } from \"@mediapipe/tasks-vision\";\nimport { drawConnectors, drawLandmarks, lerp } from \"@mediapipe/drawing_utils\";\nimport { HAND_CONNECTIONS, POSE_CONNECTIONS } from './connections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handLandmarker;\nlet poseLandmarker;\nlet lastVideoTime = -1;\nlet results = {};\nlet pose_results = {};\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const [collectedFrames, setCollectedFrames] = useState([]);\n\n  ///function to initialize webcam\n  const initializeWebcam = async () => {\n    const video = videoRef.current;\n    //const canvas = canvasRef.current;\n\n    if (video) {\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 1280,\n          height: 720\n        }\n      }).then(stream => {\n        video.srcObject = stream;\n      });\n      setupModels();\n    }\n  };\n\n  //const canvasCtx = canvas.getContext(\"2d\");\n  const setupModels = async () => {\n    const vision = await FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\");\n    handLandmarker = await HandLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: `https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task`,\n        delegate: \"GPU\"\n      },\n      numHands: 2,\n      runningMode: \"VIDEO\"\n    });\n    poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task\"\n      },\n      runningMode: \"VIDEO\"\n    });\n  };\n  const startPrediction = () => {\n    console.log(\"start prediction button is clicked!\");\n    setCollectedFrames([]);\n    predict();\n  };\n  const predict = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const canvasCtx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n      if (canvasCtx) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const nowInMs = performance.now();\n        if (lastVideoTime !== video.currentTime) {\n          lastVideoTime = video.currentTime;\n          results = handLandmarker.detectForVideo(video, nowInMs);\n          pose_results = poseLandmarker.detectForVideo(video, nowInMs);\n          console.log(\"handlandmark result\", results);\n          console.log(\"poselandmark result\", pose_results);\n        }\n        canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.save();\n        canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n        if (results.landmarks) {\n          for (const landmarks of results.landmarks) {\n            drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n              color: \"#00FF00\",\n              lineWidth: 5\n            });\n            drawLandmarks(canvasCtx, landmarks, {\n              color: \"#FF0000\",\n              lineWidth: 2\n            });\n          }\n        }\n        if (pose_results.landmarks) {\n          for (const landmarks of pose_results.landmarks) {\n            drawLandmarks(canvasCtx, landmarks, {\n              radius: data => {\n                // Handle potential undefined values\n                const zValue = data.from && data.from.z ? data.from.z : 0;\n                return lerp(zValue, -0.15, 0.1, 5, 1);\n              }\n            });\n            drawConnectors(canvasCtx, landmarks, POSE_CONNECTIONS);\n          }\n        }\n        if (results.landmarks || pose_results.landmarks) {\n          setCollectedFrames(prevFrames => [...prevFrames, {\n            hand: results.landmarks,\n            pose: pose_results.landmarks\n          }]);\n        }\n        canvasCtx.restore();\n        animationFrameRef.current = requestAnimationFrame(predict);\n      }\n    }\n  };\n  const stopPrediction = () => {\n    console.log(\"stop prediction buttion is clicked!\");\n    if (animationFrameRef.current !== null) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n\n      // Clearing the canvas\n      const canvas = canvasRef.current;\n      if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n    }\n    sendLandmarksToServer(collectedFrames);\n  };\n  const sendLandmarksToServer = async collectedFrames => {\n    console.log(\"sending data to server\");\n    const response = await fetch(\"http://localhost:3030/landmarks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // body: JSON.stringify({\n      //   hand: results.landmarks,\n      //   pose: pose_results.landmarks,\n      // }),\n      body: JSON.stringify(collectedFrames)\n    });\n    const data = await response.json();\n    console.log(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 2,\n        top: 10,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeWebcam,\n        children: \"Enable Webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPrediction,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Start Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPrediction,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Stop Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      ref: videoRef,\n      id: \"video\",\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas_output\",\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"jdP/Rh3mlJGs/7WVsZW4UGtzKD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","FilesetResolver","HandLandmarker","PoseLandmarker","drawConnectors","drawLandmarks","lerp","HAND_CONNECTIONS","POSE_CONNECTIONS","jsxDEV","_jsxDEV","handLandmarker","poseLandmarker","lastVideoTime","results","pose_results","App","_s","videoRef","canvasRef","animationFrameRef","collectedFrames","setCollectedFrames","initializeWebcam","video","current","navigator","mediaDevices","getUserMedia","width","height","then","stream","srcObject","setupModels","vision","forVisionTasks","createFromOptions","baseOptions","modelAssetPath","delegate","numHands","runningMode","startPrediction","console","log","predict","canvas","canvasCtx","getContext","videoWidth","videoHeight","nowInMs","performance","now","currentTime","detectForVideo","save","clearRect","landmarks","color","lineWidth","radius","data","zValue","from","z","prevFrames","hand","pose","restore","requestAnimationFrame","stopPrediction","cancelAnimationFrame","ctx","sendLandmarksToServer","response","fetch","method","headers","body","JSON","stringify","json","message","className","children","style","position","zIndex","top","left","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","autoPlay","playsInline","ref","id","textAlign","_c","$RefreshReg$"],"sources":["/home/hang/Documents/ML-full-stack-app/front-end/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport {\n  FilesetResolver,\n  HandLandmarker,\n  PoseLandmarker,\n} from \"@mediapipe/tasks-vision\";\nimport { drawConnectors, drawLandmarks, lerp } from \"@mediapipe/drawing_utils\";\nimport { HAND_CONNECTIONS, POSE_CONNECTIONS } from './connections';\n\n\nlet handLandmarker: HandLandmarker;\nlet poseLandmarker: PoseLandmarker;\nlet lastVideoTime = -1;\nlet results: { landmarks?: any[] } = {};\nlet pose_results: { landmarks?: any[] } = {};\n\n\nfunction App() {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationFrameRef = useRef<number | null>(null);\n  const [collectedFrames, setCollectedFrames] = useState<any[]>([]);\n\n  ///function to initialize webcam\n  const initializeWebcam = async () => {\n    const video = videoRef.current;\n    //const canvas = canvasRef.current;\n\n    if (video) {\n      navigator.mediaDevices\n        .getUserMedia({\n          video: { width: 1280, height: 720 },\n        })\n        .then((stream) => {\n          video.srcObject = stream;\n        });\n      setupModels();\n    }\n  };\n\n  //const canvasCtx = canvas.getContext(\"2d\");\n  const setupModels = async () => {\n    const vision = await FilesetResolver.forVisionTasks(\n      \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\"\n    );\n    handLandmarker = await HandLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: `https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task`,\n        delegate: \"GPU\",\n      },\n      numHands: 2,\n      runningMode: \"VIDEO\",\n    });\n\n    poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath:\n          \"https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task\",\n      },\n      runningMode: \"VIDEO\",\n    });\n  };\n\n  const startPrediction = () => {\n    console.log(\"start prediction button is clicked!\")\n    setCollectedFrames([]);\n    predict();\n  };\n\n  const predict = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const canvasCtx = canvas?.getContext(\"2d\");\n      if (canvasCtx) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const nowInMs = performance.now();\n        if (lastVideoTime !== video.currentTime) {\n          lastVideoTime = video.currentTime;\n          results = handLandmarker.detectForVideo(video, nowInMs);\n          pose_results = poseLandmarker.detectForVideo(video, nowInMs);\n          console.log(\"handlandmark result\", results);\n          console.log(\"poselandmark result\", pose_results);\n        }\n        canvasCtx?.save();\n        canvasCtx?.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (results.landmarks) {\n          for (const landmarks of results.landmarks) {\n            drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n              color: \"#00FF00\",\n              lineWidth: 5,\n            });\n            drawLandmarks(canvasCtx, landmarks, {\n              color: \"#FF0000\",\n              lineWidth: 2,\n            });\n          }\n        }\n        if (pose_results.landmarks) {\n          for (const landmarks of pose_results.landmarks) {\n            drawLandmarks(canvasCtx, landmarks, {\n              radius: (data) => {\n                // Handle potential undefined values\n                const zValue = data.from && data.from.z ? data.from.z : 0;\n                return lerp(zValue, -0.15, 0.1, 5, 1);\n              },\n            });\n            drawConnectors(canvasCtx, landmarks, POSE_CONNECTIONS);\n          }\n        }\n\n        if (results.landmarks || pose_results.landmarks) {\n          setCollectedFrames(prevFrames => [\n            ...prevFrames,\n            {\n              hand: results.landmarks,\n              pose: pose_results.landmarks,\n            }\n          ]);\n        }\n\n          canvasCtx.restore();\n          animationFrameRef.current = requestAnimationFrame(predict);\n        }\n      }\n    };\n\n    const stopPrediction = () => {\n      console.log(\"stop prediction buttion is clicked!\")\n      if (animationFrameRef.current !== null) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n\n        // Clearing the canvas\n        const canvas = canvasRef.current;\n        if (canvas) {\n          const ctx = canvas.getContext('2d');\n          ctx?.clearRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n\n      sendLandmarksToServer(collectedFrames);\n    };\n\n    const sendLandmarksToServer = async (collectedFrames: any) => {\n      console.log(\"sending data to server\");\n      const response = await fetch(\"http://localhost:3030/landmarks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        // body: JSON.stringify({\n        //   hand: results.landmarks,\n        //   pose: pose_results.landmarks,\n        // }),\n        body: JSON.stringify(collectedFrames)\n      });\n\n      const data = await response.json();\n      console.log(data.message);\n    };\n\n    \n    return (\n      <div className=\"App\">\n        <div style={{ position: \"absolute\", zIndex: 2, top: 10, left: 10 }}>\n          <button onClick={initializeWebcam}>Enable Webcam</button>\n          <button onClick={startPrediction} style={{ marginLeft: 10 }}>\n            Start Prediction\n          </button>\n          <button onClick={stopPrediction} style={{ marginLeft: 10 }}>\n            Stop Prediction\n          </button>\n        </div>\n        <video\n          autoPlay\n          playsInline\n          ref={videoRef}\n          id=\"video\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            textAlign: \"center\",\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          id=\"canvas_output\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            textAlign: \"center\",\n          }}\n        />\n      </div>\n    );\n  }\n\n  export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}