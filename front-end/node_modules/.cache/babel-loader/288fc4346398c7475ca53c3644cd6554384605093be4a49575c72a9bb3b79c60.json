{"ast":null,"code":"var _jsxFileName = \"/home/hang/Documents/ML-full-stack-app/front-end/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport { FilesetResolver, HandLandmarker, PoseLandmarker } from \"@mediapipe/tasks-vision\";\nimport { drawConnectors, drawLandmarks, lerp } from \"@mediapipe/drawing_utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handLandmarker;\nlet poseLandmarker;\nlet lastVideoTime = -1;\nlet results = {};\nlet pose_results = {};\nconst HAND_CONNECTIONS = [[0, 1], [1, 2], [2, 3], [3, 4], [0, 5], [5, 6], [6, 7], [7, 8], [0, 9], [9, 10], [10, 11], [11, 12], [0, 13], [13, 14], [14, 15], [15, 16], [0, 17], [17, 18], [18, 19], [19, 20]];\nconst POSE_CONNECTIONS = [[11, 12], [11, 13], [11, 23], [12, 14], [12, 24], [13, 15], [14, 16], [15, 17], [16, 18], [17, 19], [18, 20], [19, 21], [20, 22], [23, 25], [23, 24], [25, 27], [26, 28], [27, 29], [28, 30], [29, 31], [30, 32], [31, 32]];\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  ///function to initialize webcam\n  const initializeWebcam = async () => {\n    const video = videoRef.current;\n    //const canvas = canvasRef.current;\n\n    if (video) {\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 1280,\n          height: 720\n        }\n      }).then(stream => {\n        video.srcObject = stream;\n      });\n      setupModels();\n    }\n  };\n\n  //const canvasCtx = canvas.getContext(\"2d\");\n  const setupModels = async () => {\n    const vision = await FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\");\n    handLandmarker = await HandLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: `https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task`,\n        delegate: \"GPU\"\n      },\n      numHands: 2,\n      runningMode: \"VIDEO\"\n    });\n    poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task\"\n      },\n      runningMode: \"VIDEO\"\n    });\n  };\n  const startPrediction = () => {\n    predict();\n  };\n  const predict = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const canvasCtx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n      if (canvasCtx) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const nowInMs = performance.now();\n        if (lastVideoTime !== video.currentTime) {\n          lastVideoTime = video.currentTime;\n          results = handLandmarker.detectForVideo(video, nowInMs);\n          pose_results = poseLandmarker.detectForVideo(video, nowInMs);\n          console.log(results);\n          console.log(pose_results);\n        }\n        canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.save();\n        canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n        if (results.landmarks) {\n          for (const landmarks of results.landmarks) {\n            drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n              color: \"#00FF00\",\n              lineWidth: 5\n            });\n            drawLandmarks(canvasCtx, landmarks, {\n              color: \"#FF0000\",\n              lineWidth: 2\n            });\n          }\n        }\n        if (pose_results.landmarks) {\n          for (const landmarks of pose_results.landmarks) {\n            drawLandmarks(canvasCtx, landmarks, {\n              radius: data => {\n                // Handle potential undefined values\n                const zValue = data.from && data.from.z ? data.from.z : 0;\n                return lerp(zValue, -0.15, 0.1, 5, 1);\n              }\n            });\n            drawConnectors(canvasCtx, landmarks, POSE_CONNECTIONS);\n          }\n        }\n        canvasCtx.restore();\n        animationFrameRef.current = requestAnimationFrame(predict);\n      }\n    }\n  };\n  const stopPrediction = () => {\n    if (animationFrameRef.current !== null) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n\n      // Clearing the canvas\n      const canvas = canvasRef.current;\n      if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n    }\n  };\n  const sendLandmarksToServer = async () => {\n    const response = await fetch(\"http://localhost:5000/send-landmarks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hand: results.landmarks,\n        pose: pose_results.landmarks\n      })\n    });\n    const data = await response.json();\n    console.log(data.message);\n  };\n\n  //sendLandmarksToServer();\n\n  const getLandmarksFromServer = async () => {\n    const response = await fetch(\"http://localhost:5000/get-landmarks\");\n    const data = await response.json();\n    console.log(data);\n  };\n\n  //getLandmarksFromServer();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 2,\n        top: 10,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeWebcam,\n        children: \"Enable Webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPrediction,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Start Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPrediction,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Stop Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      ref: videoRef,\n      id: \"video\",\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas_output\",\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"atu1SHNUm1uGoJ3QHXGn9Egu4c8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","FilesetResolver","HandLandmarker","PoseLandmarker","drawConnectors","drawLandmarks","lerp","jsxDEV","_jsxDEV","handLandmarker","poseLandmarker","lastVideoTime","results","pose_results","HAND_CONNECTIONS","POSE_CONNECTIONS","App","_s","videoRef","canvasRef","animationFrameRef","initializeWebcam","video","current","navigator","mediaDevices","getUserMedia","width","height","then","stream","srcObject","setupModels","vision","forVisionTasks","createFromOptions","baseOptions","modelAssetPath","delegate","numHands","runningMode","startPrediction","predict","canvas","canvasCtx","getContext","videoWidth","videoHeight","nowInMs","performance","now","currentTime","detectForVideo","console","log","save","clearRect","landmarks","color","lineWidth","radius","data","zValue","from","z","restore","requestAnimationFrame","stopPrediction","cancelAnimationFrame","ctx","sendLandmarksToServer","response","fetch","method","headers","body","JSON","stringify","hand","pose","json","message","getLandmarksFromServer","className","children","style","position","zIndex","top","left","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","autoPlay","playsInline","ref","id","textAlign","_c","$RefreshReg$"],"sources":["/home/hang/Documents/ML-full-stack-app/front-end/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport {\n  FilesetResolver,\n  HandLandmarker,\n  PoseLandmarker,\n} from \"@mediapipe/tasks-vision\";\nimport { drawConnectors, drawLandmarks, lerp } from \"@mediapipe/drawing_utils\";\n\nlet handLandmarker: HandLandmarker;\nlet poseLandmarker: PoseLandmarker;\nlet lastVideoTime = -1;\nlet results: { landmarks?: any[] } = {};\nlet pose_results: { landmarks?: any[] } = {};\n\nconst HAND_CONNECTIONS: [number, number][] = [\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 4],\n  [0, 5],\n  [5, 6],\n  [6, 7],\n  [7, 8],\n  [0, 9],\n  [9, 10],\n  [10, 11],\n  [11, 12],\n  [0, 13],\n  [13, 14],\n  [14, 15],\n  [15, 16],\n  [0, 17],\n  [17, 18],\n  [18, 19],\n  [19, 20],\n];\n\nconst POSE_CONNECTIONS: [number, number][] = [\n  [11, 12],\n  [11, 13],\n  [11, 23],\n  [12, 14],\n  [12, 24],\n  [13, 15],\n  [14, 16],\n  [15, 17],\n  [16, 18],\n  [17, 19],\n  [18, 20],\n  [19, 21],\n  [20, 22],\n  [23, 25],\n  [23, 24],\n  [25, 27],\n  [26, 28],\n  [27, 29],\n  [28, 30],\n  [29, 31],\n  [30, 32],\n  [31, 32],\n];\n\nfunction App() {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationFrameRef = useRef<number | null>(null);\n\n  ///function to initialize webcam\n  const initializeWebcam = async () => {\n    const video = videoRef.current;\n    //const canvas = canvasRef.current;\n\n    if (video) {\n      navigator.mediaDevices\n        .getUserMedia({\n          video: { width: 1280, height: 720 },\n        })\n        .then((stream) => {\n          video.srcObject = stream;\n        });\n      setupModels();\n    }\n  };\n\n  //const canvasCtx = canvas.getContext(\"2d\");\n  const setupModels = async () => {\n    const vision = await FilesetResolver.forVisionTasks(\n      \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\"\n    );\n    handLandmarker = await HandLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: `https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task`,\n        delegate: \"GPU\",\n      },\n      numHands: 2,\n      runningMode: \"VIDEO\",\n    });\n\n    poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath:\n          \"https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task\",\n      },\n      runningMode: \"VIDEO\",\n    });\n  };\n\n  const startPrediction = () => {\n    predict();\n  };\n\n  const predict = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const canvasCtx = canvas?.getContext(\"2d\");\n      if (canvasCtx) {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const nowInMs = performance.now();\n        if (lastVideoTime !== video.currentTime) {\n          lastVideoTime = video.currentTime;\n          results = handLandmarker.detectForVideo(video, nowInMs);\n          pose_results = poseLandmarker.detectForVideo(video, nowInMs);\n          console.log(results);\n          console.log(pose_results);\n        }\n        canvasCtx?.save();\n        canvasCtx?.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (results.landmarks) {\n          for (const landmarks of results.landmarks) {\n            drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n              color: \"#00FF00\",\n              lineWidth: 5,\n            });\n            drawLandmarks(canvasCtx, landmarks, {\n              color: \"#FF0000\",\n              lineWidth: 2,\n            });\n          }\n        }\n        if (pose_results.landmarks) {\n          for (const landmarks of pose_results.landmarks) {\n            drawLandmarks(canvasCtx, landmarks, {\n              radius: (data) => {\n                // Handle potential undefined values\n                const zValue = data.from && data.from.z ? data.from.z : 0;\n                return lerp(zValue, -0.15, 0.1, 5, 1);\n              },\n            });\n            drawConnectors(canvasCtx, landmarks, POSE_CONNECTIONS);\n          }\n        }\n        canvasCtx.restore();\n        animationFrameRef.current = requestAnimationFrame(predict);\n      }\n    }\n  };\n\n  const stopPrediction = () => {\n    if (animationFrameRef.current !== null) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n\n        // Clearing the canvas\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            ctx?.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    }\n};\n\n  const sendLandmarksToServer = async () => {\n    const response = await fetch(\"http://localhost:5000/send-landmarks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        hand: results.landmarks,\n        pose: pose_results.landmarks,\n      }),\n    });\n\n    const data = await response.json();\n    console.log(data.message);\n  };\n\n  //sendLandmarksToServer();\n\n  const getLandmarksFromServer = async () => {\n    const response = await fetch(\"http://localhost:5000/get-landmarks\");\n    const data = await response.json();\n    console.log(data);\n  };\n\n  //getLandmarksFromServer();\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: \"absolute\", zIndex: 2, top: 10, left: 10 }}>\n        <button onClick={initializeWebcam}>Enable Webcam</button>\n        <button onClick={startPrediction} style={{ marginLeft: 10 }}>\n          Start Prediction\n        </button>\n        <button onClick={stopPrediction} style={{ marginLeft: 10 }}>\n                    Stop Prediction\n        </button>\n      </div>\n      <video\n        autoPlay\n        playsInline\n        ref={videoRef}\n        id=\"video\"\n        style={{\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          textAlign: \"center\",\n        }}\n      />\n      <canvas\n        ref={canvasRef}\n        id=\"canvas_output\"\n        style={{\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          textAlign: \"center\",\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}